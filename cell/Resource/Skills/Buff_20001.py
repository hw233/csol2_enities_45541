# -*- coding: gb18030 -*-

import BigWorld
import csconst
import csdefine
import csstatus
from bwdebug import *
from SpellBase import *
from Buff_Normal import Buff_Normal

class Buff_20001( Buff_Normal ):
	"""
	潜行buff
	"""
	def __init__( self ):
		"""
		"""
		Buff_Normal.__init__( self )
		
		
	def init( self, dict ):
		"""
		读取技能配置
		@param dict: 配置数据
		@type  dict: python dict
		"""
		Buff_Normal.init( self, dict )
		
		
	def springOnUseSkill( self, caster, skill ):
		"""
		使用技能被触发
		"""
		caster.removeAllBuffByBuffID( self.getBuffID(), [ csdefine.BUFF_INTERRUPT_NONE ] )
		
	def springOnDamage( self, caster, skill ):
		"""
		接收伤害后
		"""
		caster.removeAllBuffByBuffID( self.getBuffID(), [ csdefine.BUFF_INTERRUPT_NONE ] )
		
	def doBegin( self, receiver, buffData ):
		"""
		Virtual method; call only by real entity.
		效果开始的处理。

		@param receiver: 效果要影响的实体
		@type  receiver: BigWorld.Entity
		@param buffData: BUFF
		@type  buffData: BUFF
		@return: None
		"""
		Buff_Normal.doBegin( self, receiver, buffData )
		receiver.appendOnUseSkill( buffData[ "skill" ] )	# 施展技能时
		receiver.appendVictimHit( buffData[ "skill" ] )	# 被命中后
		receiver.effectStateInc( csdefine.EFFECT_STATE_PROWL )
		
	def doReload( self, receiver, buffData ):
		"""
		Virtual method; call only by real entity.
		效果重新加载的处理。

		@param receiver: 效果要影响的实体
		@type  receiver: BigWorld.Entity
		@param buffData: BUFF
		@type  buffData: BUFF
		@return: None
		"""
		Buff_Normal.doReload( self, receiver, buffData )
		receiver.appendOnUseSkill( buffData[ "skill" ] )
		receiver.appendVictimHit( buffData[ "skill" ] )
		receiver.effectStateInc( csdefine.EFFECT_STATE_PROWL )
		
	def doEnd( self, receiver, buffData ):
		"""
		Virtual method; call only by real entity.
		效果结束的处理。

		@param receiver: 效果要影响的实体
		@type  receiver: BigWorld.Entity
		@param buffData: BUFF
		@type  buffData: BUFF
		"""
		Buff_Normal.doEnd( self, receiver, buffData )
		receiver.removeOnUseSkill( buffData[ "skill" ].getUID() )
		receiver.removeVictimHit( buffData[ "skill" ].getUID() )
		receiver.effectStateDec( csdefine.EFFECT_STATE_PROWL )